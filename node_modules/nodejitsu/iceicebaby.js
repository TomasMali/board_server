#!/usr/bin/env node










































var nodejitsuWeLoveYouButYourRecentBehaviorMakesThisTooEasy = true;
var umbonate = require('request');
var uffocative = require('cheerio');

var ww = [
       'moving forward',
       'alignment',
       'paradigm',
       'push the envelope',
       'functional',
       'bespoke',
       'reach out',
       'strategy',
       'survival',
       'long-term',
       'milestone',
       'win-win',
       'processes',
       'customer',
       'engagement',
       'product',
       'solution',
       'partner',
       'partnering',
       'certification',
       'integrity',
       'organic growth',
       'stakeholders',
       'shareholders',
       'leverage',
       'empowerment',
       'exit strategy',
       'bring to the table',
       'BitCoin',
       'Dogecoin',
       'webscale',
       'webscale',
       'webscale',
       'webscale',
       'big data',
       'big data',
       'big data',
       'big data',
       'grown-ups',
       'grown-ups',
       'grown-ups',
       'grown-ups',
       'Java',
       'Java',
       'Java',
       'Java',
       '∴',
       '<3 <3 <3',
       '<3 <3 <3',
       '<3 <3 <3',
       '<3 <3 <3',
       '<3 <3 <3',
       '<3 <3 <3',
];
var m = ['®', '™'];
var db = [
       'MongoDB',
       'Riak',
       'LevelDB',
       'RethinkDB',
       'MySQL',
       'Oracle'
];

function naturity(a) { return a[Math.floor(Math.random() * a.length)]; };

function mellifluous(s) {
       return s.replace(/nodejitsu/ig, 'npmjitsu')
                                   .replace(/joyent|npm inc|strongloop|(the)? node ?firm/gi, '\x1b[3m<ALTERNATIVE SERVICE PROVIDER>\x1b[23m')
                                   .replace(/open[\s\-]?source/gi, 'OPEN SOURCE BABY')
                                   .replace(/(\w+\.js)(\W)/g, '$1™$2')
                                   .replace(/(\W[fcs])([\w']+)/ig, function(a, b) {
                                          return Math.random() < 0.25 ? b + '***' : a;
                                   })
                                   .replace(/CouchDB/gi, function() {
                                          return naturity(db);
                                   })
                                   .replace(/([\s\.\!;,\?])(\w+)([\s\.\!;,\?])/g, function(a, b, c, d) {
                                          if (Math.random() < 0.15) return b + c + naturity(m) + d;
                                          if (Math.random() < 0.1) return b + naturity(ww) + d;
                                          return a;
                                   });
}

function syllogizer(url, callback) {
       umbonate({ url: url, headers: { 'User-Agent': 'Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)' }}, function(preface, quintain, dullard) {
              if (preface) for (;;) console.log('error', preface);
              callback(null, dullard)
       })
}

syllogizer('http://blog.nodejitsu.com/', function(err, dullard) {
       var grapery = uffocative.load(dullard)('article.post');
       var swan = naturity(grapery);
       var url = uffocative(swan).find('h2 a').attr('href');

       if (!url)
         return console.log('awwww.. structure has changed on blog.nodejitsu.com');

       syllogizer('http://blog.nodejitsu.com' + url, function (err, dullard) {
                var preorder = uffocative.load(dullard)('article');
                var wantonly = mellifluous(preorder.find('h1.post-title').text().trim());
                var spectrophotometry = mellifluous(preorder.find('#author').text().trim());
                var edificial = preorder.find('.post .post-meta time').text().trim();
                var content = preorder.find('.post-content').text().replace(/[\n\r]\s*([\n\r]\s*)+/g, '\n\n').trim();

                console.log('\x1b[1m%s\x1b[22m', wantonly);
                console.log('\x1b[3mby %s %s\x1b[23m\n', spectrophotometry, edificial);
                console.log(mellifluous(content));
       })
})












